var __require=(x=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(x,{get:(a,b)=>(typeof require<"u"?require:a)[b]}):x)(function(x){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+x+'" is not supported')});import path from"path";import{parse}from"vue-docgen-api";import{createFilter}from"vite";import MagicString from"magic-string";function vueDocgen(){let filter=createFilter(/\.(vue)$/);return{name:"storybook:vue2-docgen-plugin",async transform(src,id){if(!filter(id))return;let metaData=await parse(id),metaSource=JSON.stringify(metaData),s=new MagicString(src);return s.append(`;__component__.exports.__docgenInfo = ${metaSource}`),{code:s.toString(),map:s.generateMap({hires:!0,source:id})}}}}var core=async(config,options)=>{let framework=await options.presets.apply("framework");return{...config,builder:{name:path.dirname(__require.resolve(path.join("@storybook/builder-vite","package.json"))),options:typeof framework=="string"?{}:framework?.options.builder||{}},renderer:"@storybook/vue"}},typescript=async config=>({...config,skipBabel:!0}),viteFinal=async(config,{presets})=>{let{plugins=[]}=config;return plugins.push(vueDocgen()),{...config,plugins,resolve:{...config.resolve,alias:{...config.resolve?.alias,vue:"vue/dist/vue.esm.js"}}}};export{core,typescript,viteFinal};
