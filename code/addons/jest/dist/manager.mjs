import{ADDON_ID,ADD_TESTS,PANEL_ID,PARAM_KEY}from"./chunk-47NOC73U.mjs";import*as React5 from"react";import{addons}from"@storybook/manager-api";import React4,{Fragment as Fragment3}from"react";import{styled as styled3,themes as themes2,convert as convert2}from"@storybook/theming";import{ScrollArea,TabsState,Link,Placeholder}from"@storybook/components";import{useResizeDetector}from"react-resize-detector";import React2,{Fragment as Fragment2,useState}from"react";import{styled as styled2,themes,convert}from"@storybook/theming";import{Icons}from"@storybook/components";import React,{Fragment}from"react";import{styled}from"@storybook/theming";var positiveConsoleRegex=/\[32m(.*?)\[39m/,negativeConsoleRegex=/\[31m(.*?)\[39m/,positiveType="positive",negativeType="negative",endToken="[39m",failStartToken="[31m",passStartToken="[32m",stackTraceStartToken="at",titleEndToken=":",TestDetail=class{},StackTrace=styled.pre(({theme})=>({background:theme.color.lighter,paddingTop:4,paddingBottom:4,paddingLeft:6,borderRadius:2,overflow:"auto",margin:"10px 30px 10px 30px",whiteSpace:"pre"})),Results=styled.div({paddingTop:10,marginLeft:31,marginRight:30}),Description=styled.div(({theme})=>({paddingBottom:10,paddingTop:10,borderBottom:theme.appBorderColor,marginLeft:31,marginRight:30,overflowWrap:"break-word"})),StatusColor=styled.strong(({status,theme})=>({color:status===positiveType?theme.color.positive:theme.color.negative,fontWeight:500})),colorizeText=(msg,type)=>type?msg.split(type===positiveType?positiveConsoleRegex:negativeConsoleRegex).map((i,index)=>index%2?React.createElement(StatusColor,{key:`${type}_${i}`,status:type},i):i):[msg],getConvertedText=msg=>{let elementArray=[];return msg&&msg.split(/\[2m/).join("").split(/\[22m/).forEach(element=>{element&&element.trim()&&(element.indexOf(failStartToken)>-1&&element.indexOf(failStartToken)<element.indexOf(endToken)?elementArray=elementArray.concat(colorizeText(element,negativeType)):element.indexOf(passStartToken)>-1&&element.indexOf(passStartToken)<element.indexOf(endToken)?elementArray=elementArray.concat(colorizeText(element,positiveType)):elementArray=elementArray.concat(element))}),elementArray},getTestDetail=msg=>{let lines=msg.split(`
`).filter(Boolean),testDetail=new TestDetail;testDetail.description=getConvertedText(lines[0]),testDetail.stackTrace="",testDetail.result=[];for(let index=1;index<lines.length;index+=1){let current=lines[index],next=lines[index+1];if(current.trim().toLowerCase().indexOf(stackTraceStartToken)===0)testDetail.stackTrace+=`${current.trim()}
`;else if(current.trim().indexOf(titleEndToken)>-1){let title,value=null;current.trim().indexOf(titleEndToken)===current.length-1?(title=current.trim(),value=getConvertedText(next),index+=1):(title=current.substring(0,current.indexOf(titleEndToken)).trim(),value=getConvertedText(current.substring(current.indexOf(titleEndToken),current.length))),testDetail.result=[...testDetail.result,title," ",...value,React.createElement("br",{key:index})]}else testDetail.result=[...testDetail.result," ",...getConvertedText(current)]}return testDetail},Message=props=>{let{msg}=props,detail=getTestDetail(msg);return React.createElement(Fragment,null,detail.description?React.createElement(Description,null,detail.description):null,detail.result?React.createElement(Results,null,detail.result):null,detail.stackTrace?React.createElement(StackTrace,null,detail.stackTrace):null)},Message_default=Message;var Wrapper=styled2.div(({theme,status})=>({display:"flex",width:"100%",borderTop:`1px solid ${theme.appBorderColor}`,"&:hover":{background:status==="failed"?theme.background.hoverable:null}})),HeaderBar=styled2.div(({theme,status})=>({padding:theme.layoutMargin,paddingLeft:theme.layoutMargin-3,background:"none",color:"inherit",textAlign:"left",cursor:status==="failed"?"pointer":null,borderLeft:"3px solid transparent",width:"100%",display:"flex","&:focus":{outline:"0 none",borderLeft:`3px solid ${theme.color.secondary}`}})),Icon=styled2(Icons)(({theme})=>({height:10,width:10,minWidth:10,color:theme.textMutedColor,marginRight:10,transition:"transform 0.1s ease-in-out",alignSelf:"center",display:"inline-flex"})),capitalizeFirstLetter=text=>text.charAt(0).toUpperCase().concat(text.slice(1));function Result(props){let[isOpen,setIsOpen]=useState(!1),onToggle=()=>{setIsOpen(!isOpen)},{fullName,title,failureMessages,status}=props;return React2.createElement(Fragment2,null,React2.createElement(Wrapper,{status},React2.createElement(HeaderBar,{onClick:onToggle,role:"button",status},status==="failed"?React2.createElement(Icon,{icon:"arrowdown",color:convert(themes.light).textMutedColor,style:{transform:`rotate(${isOpen?0:-90}deg)`}}):null,React2.createElement("div",null,capitalizeFirstLetter(fullName)||capitalizeFirstLetter(title)))),isOpen?React2.createElement(Fragment2,null,failureMessages.map((msg,i)=>React2.createElement(Message_default,{msg,key:i}))):null)}import React3,{Component as ReactComponent}from"react";import{STORY_CHANGED}from"@storybook/core-events";var provideTests=Component=>{var _a;return _a=class extends ReactComponent{constructor(){super(...arguments);this.state={};this.onAddTests=({kind,storyName,tests})=>{this.setState({kind,storyName,tests})}}componentDidMount(){this.mounted=!0;let{api}=this.props;this.stopListeningOnStory=api.on(STORY_CHANGED,()=>{let{kind,storyName,tests}=this.state;this.mounted&&(kind||storyName||tests)&&this.onAddTests({})}),api.on(ADD_TESTS,this.onAddTests)}componentWillUnmount(){this.mounted=!1;let{api}=this.props;this.stopListeningOnStory(),api.off(ADD_TESTS,this.onAddTests)}render(){let{active}=this.props,{tests}=this.state;return active?React3.createElement(Component,{tests}):null}},_a.defaultProps={active:!1},_a};var StatusTypes={PASSED_TYPE:"passed",FAILED_TYPE:"failed",PENDING_TYPE:"pending",TODO_TYPE:"todo"},List=styled3.ul({listStyle:"none",fontSize:14,padding:0,margin:0}),Item=styled3.li({display:"block",padding:0}),ProgressWrapper=styled3.div({position:"relative",height:10,width:30,display:"flex",top:-2}),SuiteHead=styled3.div({display:"flex",alignItems:"baseline",position:"absolute",zIndex:2,right:20,marginTop:15}),UnstyledSuiteTotals=({result,className,width})=>React4.createElement("div",{className},React4.createElement(Fragment3,null,width>325&&result.assertionResults?React4.createElement("div",null,result.assertionResults.length," ",result.assertionResults.length>1?"tests":"test"):null,width>280&&result.endTime&&result.startTime?React4.createElement("div",null,result.endTime-result.startTime,"ms"):null)),SuiteTotals=styled3(UnstyledSuiteTotals)(({theme})=>({display:"flex",alignItems:"center",color:theme.color.dark,fontSize:"14px",marginTop:-5,"& > *":{marginRight:10}})),SuiteProgressPortion=styled3.div(({color,progressPercent})=>({height:6,top:3,width:`${progressPercent}%`,backgroundColor:color})),getTestsByTypeMap=result=>{let testsByType=new Map;return result.assertionResults.forEach(assertion=>{testsByType.set(assertion.status,testsByType.get(assertion.status)?testsByType.get(assertion.status).concat(assertion):[assertion])}),testsByType},getColorByType=type=>{switch(type){case StatusTypes.PASSED_TYPE:return convert2(themes2.light).color.positive;case StatusTypes.FAILED_TYPE:return convert2(themes2.light).color.negative;case StatusTypes.PENDING_TYPE:return convert2(themes2.light).color.warning;case StatusTypes.TODO_TYPE:return convert2(themes2.light).color.purple;default:return null}},TestPanel=({test})=>{let{ref,width}=useResizeDetector(),{result}=test;if(!result||!result.assertionResults)return React4.createElement(Placeholder,null,"This story has tests configured, but no file was found");let testsByType=getTestsByTypeMap(result),sortedTestsByCount=[...testsByType.entries()].sort((a,b)=>a[1].length-b[1].length);return React4.createElement("section",{ref},React4.createElement(SuiteHead,null,React4.createElement(SuiteTotals,{result,width}),width>240?React4.createElement(ProgressWrapper,null,sortedTestsByCount.map(entry=>React4.createElement(SuiteProgressPortion,{key:`progress-portion-${entry[0]}`,color:getColorByType(entry[0]),progressPercent:entry[1]?entry[1].length/result.assertionResults.length*100:0}))):null),React4.createElement(TabsState,{initial:"failing-tests",backgroundColor:convert2(themes2.light).background.hoverable},React4.createElement("div",{id:"failing-tests",title:`${testsByType.get(StatusTypes.FAILED_TYPE)?testsByType.get(StatusTypes.FAILED_TYPE).length:0} Failed`,color:getColorByType(StatusTypes.FAILED_TYPE)},React4.createElement(List,null,testsByType.get(StatusTypes.FAILED_TYPE)?testsByType.get(StatusTypes.FAILED_TYPE).map(res=>React4.createElement(Item,{key:res.fullName||res.title},React4.createElement(Result,{...res}))):React4.createElement(Placeholder,{key:`no-tests-${StatusTypes.FAILED_TYPE}`},"This story has no failing tests."))),React4.createElement("div",{id:"passing-tests",title:`${testsByType.get(StatusTypes.PASSED_TYPE)?testsByType.get(StatusTypes.PASSED_TYPE).length:0} Passed`,color:getColorByType(StatusTypes.PASSED_TYPE)},React4.createElement(List,null,testsByType.get(StatusTypes.PASSED_TYPE)?testsByType.get(StatusTypes.PASSED_TYPE).map(res=>React4.createElement(Item,{key:res.fullName||res.title},React4.createElement(Result,{...res}))):React4.createElement(Placeholder,{key:`no-tests-${StatusTypes.PASSED_TYPE}`},"This story has no passing tests."))),React4.createElement("div",{id:"pending-tests",title:`${testsByType.get(StatusTypes.PENDING_TYPE)?testsByType.get(StatusTypes.PENDING_TYPE).length:0} Pending`,color:getColorByType(StatusTypes.PENDING_TYPE)},React4.createElement(List,null,testsByType.get(StatusTypes.PENDING_TYPE)?testsByType.get(StatusTypes.PENDING_TYPE).map(res=>React4.createElement(Item,{key:res.fullName||res.title},React4.createElement(Result,{...res}))):React4.createElement(Placeholder,{key:`no-tests-${StatusTypes.PENDING_TYPE}`},"This story has no pending tests."))),React4.createElement("div",{id:"todo-tests",title:`${testsByType.get(StatusTypes.TODO_TYPE)?testsByType.get(StatusTypes.TODO_TYPE).length:0} Todo`,color:getColorByType(StatusTypes.TODO_TYPE)},React4.createElement(List,null,testsByType.get(StatusTypes.TODO_TYPE)?testsByType.get(StatusTypes.TODO_TYPE).map(res=>React4.createElement(Item,{key:res.fullName||res.title},React4.createElement(Result,{...res}))):React4.createElement(Placeholder,{key:`no-tests-${StatusTypes.TODO_TYPE}`},"This story has no tests todo.")))))},Content=styled3(({tests,className})=>React4.createElement("div",{className},tests.map(test=>React4.createElement(TestPanel,{key:test.name,test}))))({flex:"1 1 0%"}),Panel=({tests})=>React4.createElement(ScrollArea,{vertical:!0},tests?React4.createElement(Content,{tests}):React4.createElement(Placeholder,null,React4.createElement(Fragment3,null,"No tests found"),React4.createElement(Fragment3,null,"Learn how to\xA0",React4.createElement(Link,{href:"https://github.com/storybookjs/storybook/tree/master/addons/jest",target:"_blank",withArrow:!0},"add Jest test results to your story"))));Panel.defaultProps={tests:null};var Panel_default=provideTests(Panel);addons.register(ADDON_ID,api=>{addons.addPanel(PANEL_ID,{title:"Tests",render:({active,key})=>React5.createElement(Panel_default,{key,api,active}),paramKey:PARAM_KEY})});
